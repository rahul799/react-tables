[{"/home/rahul/Documents/tasks/react-tbl/src/index.js":"1","/home/rahul/Documents/tasks/react-tbl/src/App.js":"2","/home/rahul/Documents/tasks/react-tbl/src/reportWebVitals.js":"3","/home/rahul/Documents/tasks/react-tbl/src/components/TwitterData/index.js":"4","/home/rahul/Documents/tasks/react-tbl/src/components/WorldCupData/index.js":"5","/home/rahul/Documents/tasks/react-tbl/src/components/Header/index.js":"6","/home/rahul/Documents/tasks/react-tbl/src/components/VotingData/index.js":"7","/home/rahul/Documents/tasks/react-tbl/src/components/Header/Header.js":"8","/home/rahul/Documents/tasks/react-tbl/src/components/TwitterData/TwitterData.js":"9","/home/rahul/Documents/tasks/react-tbl/src/components/WorldCupData/WorldCupData.js":"10","/home/rahul/Documents/tasks/react-tbl/src/components/VotingData/VotingData.js":"11"},{"size":500,"mtime":1610725296000,"results":"12","hashOfConfig":"13"},{"size":603,"mtime":1610789215000,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1610725296000,"results":"15","hashOfConfig":"13"},{"size":41,"mtime":1610730117000,"results":"16","hashOfConfig":"13"},{"size":42,"mtime":1610730056000,"results":"17","hashOfConfig":"13"},{"size":36,"mtime":1610729172000,"results":"18","hashOfConfig":"13"},{"size":40,"mtime":1610730151000,"results":"19","hashOfConfig":"13"},{"size":265,"mtime":1610729589000,"results":"20","hashOfConfig":"13"},{"size":5845,"mtime":1610801571145,"results":"21","hashOfConfig":"13"},{"size":6020,"mtime":1610801418153,"results":"22","hashOfConfig":"13"},{"size":4602,"mtime":1610802412168,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"9r8vek",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/rahul/Documents/tasks/react-tbl/src/index.js",[],["49","50"],"/home/rahul/Documents/tasks/react-tbl/src/App.js",[],"/home/rahul/Documents/tasks/react-tbl/src/reportWebVitals.js",[],"/home/rahul/Documents/tasks/react-tbl/src/components/TwitterData/index.js",[],"/home/rahul/Documents/tasks/react-tbl/src/components/WorldCupData/index.js",[],"/home/rahul/Documents/tasks/react-tbl/src/components/Header/index.js",[],"/home/rahul/Documents/tasks/react-tbl/src/components/VotingData/index.js",[],"/home/rahul/Documents/tasks/react-tbl/src/components/Header/Header.js",[],"/home/rahul/Documents/tasks/react-tbl/src/components/TwitterData/TwitterData.js",["51","52"],"import React, { useState, useMemo } from \"react\";\nimport { useTable, useSortBy } from \"react-table\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\n\nconst TwitterData = () => {\n  const columnHeaderData = [\n    {\n      Header: \"ACCOUNT\",\n      accessor: \"account\", // accessor is the \"key\" in the data\n    },\n    {\n      Header: \"FOLLOWERS\",\n      accessor: \"followers\",\n    },\n    {\n      Header: \"EXCLUSIVE FOLLOWERS\",\n      accessor: \"exclusive\",\n    },\n  ];\n\n  const columns = useMemo(() => columnHeaderData, []);\n\n  const columnMainData = [\n    {\n      account: \"@marwilliamson\",\n      followers: 2610335,\n      exclusive: 74.8,\n    },\n    {\n      account: \"@KamalaHarris\",\n      followers: 9254423,\n      exclusive: 54.8,\n    },\n    {\n      account: \"@SenGilli\",\n      followers: 6435352,\n      exclusive: 43.6,\n    },\n    {\n      account: \"@Trumph\",\n      followers: 2984951,\n      exclusive: 12.5,\n    },\n    {\n      account: \"@JoeBiden\",\n      followers: 7473324,\n      exclusive: 82.1,\n    },\n    {\n      account: \"@amyKlob\",\n      followers: 7864265,\n      exclusive: 77.8,\n    },\n  ];\n\n  const chartOptions = {\n    title: {\n      text: \"Twitter Account Data\",\n    },\n    chart: {\n      type: \"\",\n    },\n    series: [\n      {\n        data: [74.8,54.8,43.6,12.5,82.1,77.8],\n      },\n    ],\n  };\n\n  const data = useMemo(() => columnMainData, []);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({ columns, data }, useSortBy);\n\n  const [selectedDataIndex, setSelectedDataIndex] = useState(0);\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-12 col-sm-6 col-md-7\">\n        <table className=\"table table-striped\" {...getTableProps()}>\n          <thead>\n            {headerGroups.map((headerGroup) => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map((column) => (\n                  <th\n                    className=\"head-cell\"\n                    {...column.getHeaderProps(column.getSortByToggleProps())}\n                  >\n                    {column.render(\"Header\")}\n                    <span>\n                      {column.isSorted\n                        ? column.isSortedDesc\n                          ? \" ðŸ”½\"\n                          : \" ðŸ”¼\"\n                        : \"\"}\n                    </span>\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n            {rows.map((row) => {\n              prepareRow(row);\n              return (\n                <tr\n                  {...row.getRowProps()}\n                  onMouseOver={(e) => {\n                    const tr = e.target.parentElement;\n                    const userName = tr.children[0].innerHTML;\n                    let selectedDataIndex = -1;\n                    columnMainData.forEach((data, index) => {\n                      if (\n                        data.account.toLowerCase() === userName.toLowerCase()\n                      ) {\n                        selectedDataIndex = index;\n                      }\n                    });\n                    setSelectedDataIndex(selectedDataIndex);\n                  }}\n                >\n                  {row.cells.map((cell) => (\n                    <td className={`p-2 cell`} {...cell.getCellProps()}>\n                      {cell.column.Header === \"EXCLUSIVE FOLLOWERS\" ? (\n                        <div className=\"progress\">\n                          <div\n                            className=\"progress-bar progress-bar-striped progress-bar-animated bg-danger\"\n                            role=\"progressbar\"\n                            style={{ width: `${cell.value}%` }}\n                            aria-valuenow={cell.value}\n                            aria-valuemin=\"0\"\n                            aria-valuemax=\"100\"\n                          >\n                            {cell.value}%\n                          </div>\n                        </div>\n                      ) : cell.column.Header === \"FOLLOWERS\" ? (\n                        <div className=\"progress\">\n                          <div\n                            className=\"progress-bar progress-bar-striped progress-bar-animated bg-info\"\n                            role=\"progressbar\"\n                            style={{\n                              width: `${(cell.value / 10000000) * 100}%`,\n                            }}\n                            aria-valuenow={(cell.value / 10000000) * 100}\n                            aria-valuemin=\"0\"\n                            aria-valuemax=\"10000000\"\n                          >\n                            {cell.value}\n                          </div>\n                        </div>\n                      ) : (\n                        cell.render(\"Cell\")\n                      )}\n                    </td>\n                  ))}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n      <div className=\"col-12 col-sm-6 col-md-5\">\n        <div className=\"row h-100\">\n          <div className=\"col-12 col-lg-6\">\n            <div>\n              <HighchartsReact highcharts={Highcharts} options={chartOptions} />\n            </div>\n          </div>\n          <div className=\"col-12 col-lg-6\">\n            <div className=\"d-flex h-100 justify-content-center align-items-center\">\n              {!!(selectedDataIndex + 1) && (\n                <p>\n                  <b>{columnMainData[selectedDataIndex]?.account}</b> has{\" \"}\n                  <b>{columnMainData[selectedDataIndex]?.followers}</b> on the\n                  twitter\n                </p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TwitterData;\n","/home/rahul/Documents/tasks/react-tbl/src/components/WorldCupData/WorldCupData.js",["53","54"],"import React, { useState, useMemo } from \"react\";\nimport { useTable, useSortBy } from \"react-table\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\n\nconst WorldCupData = () => {\n  const columnHeaderData = [\n    {\n      Header: \"TEAM\",\n      accessor: \"team\", // accessor is the \"key\" in the data\n    },\n    {\n      Header: \"GROUP\",\n      accessor: \"group\",\n    },\n    {\n      Header: \"SPI\",\n      accessor: \"spi\",\n    },\n    {\n      Header: \"OFF.\",\n      accessor: \"off\",\n    },\n    {\n      Header: \"DEF.\",\n      accessor: \"def\",\n    },\n    {\n      Header: \"MAKE ROUND OF 16\",\n      accessor: \"ro16\",\n    },\n    {\n      Header: \"MAKE QTR-FINALS\",\n      accessor: \"qf\",\n    },\n    {\n      Header: \"MAKE SEMIFINALS\",\n      accessor: \"sf\",\n    },\n    {\n      Header: \"WIN WORLD CUP\",\n      accessor: \"win\",\n    },\n  ];\n\n  const columns = useMemo(() => columnHeaderData, []);\n\n  const columnMainData = [\n    {\n      team: \"Argentina\",\n      group: \"D\",\n      spi: 98.3,\n      off: 1.5,\n      def: 1.4,\n      ro16: 1,\n      qf: \"78.4%\",\n      sf: \"42.1%\",\n      win: \"19.4%\",\n    },\n    {\n      team: \"New York\",\n      group: \"A\",\n      spi: 78.3,\n      off: 2.5,\n      def: 1.1,\n      ro16: 0.98,\n      qf: \"68.4%\",\n      sf: \"32.1%\",\n      win: \"39.4%\",\n    },\n    {\n      team: \"Australia\",\n      group: \"D\",\n      spi: 80.3,\n      off: 2.1,\n      def: 2.2,\n      ro16: 0.13,\n      qf: \"58.4%\",\n      sf: \"32.1%\",\n      win: \"8.4%\",\n    },\n    {\n      team: \"USA\",\n      group: \"B\",\n      spi: 98.3,\n      off: 1.5,\n      def: 1.9,\n      ro16: 0.44,\n      qf: \"38.4%\",\n      sf: \"55.1%\",\n      win: \"55.4%\",\n    },\n    {\n      team: \"Arezona\",\n      group: \"C\",\n      spi: 58.3,\n      off: 1.5,\n      def: 1.9,\n      ro16: 0.39,\n      qf: \"78.4%\",\n      sf: \"42.1%\",\n      win: \"19.4%\",\n    },\n    {\n      team: \"Alask\",\n      group: \"A\",\n      spi: 78.3,\n      off: 9.8,\n      def: 0.9,\n      ro16: 9.98,\n      qf: \"68.4%\",\n      sf: \"11.2%\",\n      win: \"35.4%\",\n    },\n  ];\n\n  const data = React.useMemo(() => columnMainData, []);\n\n  const chartOptions = {\n    title: {\n      text: \"World Cup Data\",\n    },\n    chart: {\n      type: \"\",\n    },\n    series: [\n      {\n        data: [19.4,39.4,8.4,55.4,19.4,35.4],\n      },\n    ],\n  };\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({ columns, data }, useSortBy);\n\n  const [selectedDataIndex, setSelectedDataIndex] = useState(0);\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-12 col-sm-6 col-md-7\">\n        <table className=\"table table-striped\" {...getTableProps()}>\n          <thead>\n            {headerGroups.map((headerGroup) => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map((column) => (\n                  <th\n                    className=\"head-cell\"\n                    {...column.getHeaderProps(column.getSortByToggleProps())}\n                  >\n                    {column.render(\"Header\")}\n                    <span>\n                      {column.isSorted\n                        ? column.isSortedDesc\n                          ? \" ðŸ”½\"\n                          : \" ðŸ”¼\"\n                        : \"\"}\n                    </span>\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n            {rows.map((row) => {\n              prepareRow(row);\n              return (\n                <tr\n                  {...row.getRowProps()}\n                  onMouseOver={(e) => {\n                    const tr = e.target.parentElement;\n                    const userName = tr.children[0].innerHTML;\n                    console.log(userName);\n                    let selectedDataIndex = -1;\n                    columnMainData.forEach((data, index) => {\n                      if (data.team.toLowerCase() === userName.toLowerCase()) {\n                        selectedDataIndex = index;\n                      }\n                    });\n                    setSelectedDataIndex(selectedDataIndex);\n                  }}\n                >\n                  {row.cells.map((cell) => (\n                    <td\n                      className={`p-2 cell ${\n                        cell.column.Header === \"MAKE ROUND OF 16\"\n                          ? \"bg-info\"\n                          : \"\"\n                      }`}\n                      {...cell.getCellProps()}\n                    >\n                      {cell.column.Header === \"OFF.\" ||\n                      cell.column.Header === \"DEF.\" ? (\n                        <span\n                          className={`bg-circle ${\n                            cell.column.Header === \"OFF.\"\n                              ? \"bg-info\"\n                              : \"bg-danger\"\n                          }`}\n                        >\n                          {cell.render(\"Cell\")}\n                        </span>\n                      ) : (\n                        cell.render(\"Cell\")\n                      )}\n                    </td>\n                  ))}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n      <div className=\"col-12 col-sm-6 col-md-5\">\n        <div className=\"row h-100\">\n          <div className=\"col-12 col-lg-6\">\n            <div>\n              <HighchartsReact highcharts={Highcharts} options={chartOptions} />\n            </div>\n          </div>\n          <div className=\"col-12 col-lg-6\">\n            <div className=\"d-flex h-100 justify-content-center align-items-center\">\n              {!!(selectedDataIndex + 1) && (\n                <p>\n                  <b>{columnMainData[selectedDataIndex]?.team}</b> has{\" \"}\n                  <b>{columnMainData[selectedDataIndex]?.win}</b> chances of\n                  winning world cup\n                </p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WorldCupData;\n","/home/rahul/Documents/tasks/react-tbl/src/components/VotingData/VotingData.js",["55","56"],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":22,"column":51,"nodeType":"63","endLine":22,"endColumn":53,"suggestions":"64"},{"ruleId":"61","severity":1,"message":"65","line":71,"column":46,"nodeType":"63","endLine":71,"endColumn":48,"suggestions":"66"},{"ruleId":"61","severity":1,"message":"62","line":46,"column":51,"nodeType":"63","endLine":46,"endColumn":53,"suggestions":"67"},{"ruleId":"61","severity":1,"message":"68","line":117,"column":52,"nodeType":"63","endLine":117,"endColumn":54,"suggestions":"69"},{"ruleId":"61","severity":1,"message":"62","line":22,"column":51,"nodeType":"63","endLine":22,"endColumn":53,"suggestions":"70"},{"ruleId":"61","severity":1,"message":"68","line":62,"column":52,"nodeType":"63","endLine":62,"endColumn":54,"suggestions":"71"},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'columnHeaderData'. Either include it or remove the dependency array.","ArrayExpression",["74"],"React Hook useMemo has a missing dependency: 'columnMainData'. Either include it or remove the dependency array.",["75"],["76"],"React Hook React.useMemo has a missing dependency: 'columnMainData'. Either include it or remove the dependency array.",["77"],["78"],["79"],"no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},{"desc":"82","fix":"83"},{"desc":"80","fix":"84"},{"desc":"82","fix":"85"},{"desc":"80","fix":"86"},{"desc":"82","fix":"87"},"Update the dependencies array to be: [columnHeaderData]",{"range":"88","text":"89"},"Update the dependencies array to be: [columnMainData]",{"range":"90","text":"91"},{"range":"92","text":"89"},{"range":"93","text":"91"},{"range":"94","text":"89"},{"range":"95","text":"91"},[559,561],"[columnHeaderData]",[1397,1399],"[columnMainData]",[914,916],[2073,2075],[538,540],[1210,1212]]